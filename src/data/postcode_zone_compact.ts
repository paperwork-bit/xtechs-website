export type Zone = 1 | 2 | 3 | 4;

export interface Range { start: number; end: number; zone: Zone; }

export const POSTCODE_ZONE_RANGES: Range[] = [
  { start: 0, end: 799, zone: 3 },
  { start: 800, end: 853, zone: 2 },
  { start: 854, end: 854, zone: 3 },
  { start: 855, end: 861, zone: 2 },
  { start: 862, end: 862, zone: 3 },
  { start: 863, end: 869, zone: 2 },
  { start: 870, end: 879, zone: 1 },
  { start: 880, end: 885, zone: 3 },
  { start: 886, end: 1000, zone: 2 },
  { start: 1001, end: 2355, zone: 3 },
  { start: 2356, end: 2357, zone: 2 },
  { start: 2358, end: 2384, zone: 3 },
  { start: 2385, end: 2389, zone: 2 },
  { start: 2390, end: 2395, zone: 3 },
  { start: 2396, end: 2397, zone: 2 },
  { start: 2398, end: 2399, zone: 3 },
  { start: 2400, end: 2400, zone: 2 },
  { start: 2401, end: 2404, zone: 3 },
  { start: 2405, end: 2407, zone: 2 },
  { start: 2408, end: 2544, zone: 3 },
  { start: 2545, end: 2554, zone: 4 },
  { start: 2555, end: 2627, zone: 3 },
  { start: 2628, end: 2628, zone: 4 },
  { start: 2629, end: 2629, zone: 3 },
  { start: 2630, end: 2639, zone: 4 },
  { start: 2640, end: 2816, zone: 3 },
  { start: 2817, end: 2817, zone: 2 },
  { start: 2818, end: 2820, zone: 3 },
  { start: 2821, end: 2829, zone: 2 },
  { start: 2830, end: 2830, zone: 3 },
  { start: 2831, end: 2841, zone: 2 },
  { start: 2842, end: 2872, zone: 3 },
  { start: 2873, end: 2873, zone: 2 },
  { start: 2874, end: 2877, zone: 3 },
  { start: 2878, end: 2889, zone: 2 },
  { start: 2890, end: 2999, zone: 3 },
  { start: 3000, end: 3035, zone: 4 },
  { start: 3036, end: 3038, zone: 3 },
  { start: 3039, end: 3044, zone: 4 },
  { start: 3045, end: 3045, zone: 3 },
  { start: 3046, end: 3046, zone: 4 },
  { start: 3047, end: 3049, zone: 3 },
  { start: 3050, end: 3058, zone: 4 },
  { start: 3059, end: 3059, zone: 3 },
  { start: 3060, end: 3060, zone: 4 },
  { start: 3061, end: 3064, zone: 3 },
  { start: 3065, end: 3074, zone: 4 },
  { start: 3075, end: 3076, zone: 3 },
  { start: 3077, end: 3098, zone: 4 },
  { start: 3099, end: 3099, zone: 3 },
  { start: 3100, end: 3292, zone: 4 },
  { start: 3293, end: 3302, zone: 3 },
  { start: 3303, end: 3308, zone: 4 },
  { start: 3309, end: 3319, zone: 3 },
  { start: 3320, end: 3333, zone: 4 },
  { start: 3334, end: 3337, zone: 3 },
  { start: 3338, end: 3339, zone: 4 },
  { start: 3340, end: 3758, zone: 3 },
  { start: 3759, end: 3760, zone: 4 },
  { start: 3761, end: 3764, zone: 3 },
  { start: 3765, end: 3999, zone: 4 },
  { start: 4000, end: 4416, zone: 3 },
  { start: 4417, end: 4417, zone: 2 },
  { start: 4418, end: 4427, zone: 3 },
  { start: 4428, end: 4473, zone: 2 },
  { start: 4474, end: 4476, zone: 1 },
  { start: 4477, end: 4478, zone: 2 },
  { start: 4479, end: 4485, zone: 1 },
  { start: 4486, end: 4491, zone: 2 },
  { start: 4492, end: 4492, zone: 1 },
  { start: 4493, end: 4493, zone: 2 },
  { start: 4494, end: 4494, zone: 3 },
  { start: 4495, end: 4497, zone: 2 },
  { start: 4498, end: 4719, zone: 3 },
  { start: 4720, end: 4722, zone: 2 },
  { start: 4723, end: 4723, zone: 3 },
  { start: 4724, end: 4734, zone: 2 },
  { start: 4735, end: 4736, zone: 1 },
  { start: 4737, end: 4822, zone: 3 },
  { start: 4823, end: 4823, zone: 2 },
  { start: 4824, end: 4824, zone: 3 },
  { start: 4825, end: 4827, zone: 2 },
  { start: 4828, end: 4828, zone: 3 },
  { start: 4829, end: 4829, zone: 1 },
  { start: 4830, end: 5431, zone: 3 },
  { start: 5432, end: 5450, zone: 2 },
  { start: 5451, end: 5654, zone: 3 },
  { start: 5655, end: 5669, zone: 2 },
  { start: 5670, end: 5679, zone: 3 },
  { start: 5680, end: 5699, zone: 2 },
  { start: 5700, end: 5709, zone: 3 },
  { start: 5710, end: 5722, zone: 2 },
  { start: 5723, end: 5724, zone: 1 },
  { start: 5725, end: 5730, zone: 2 },
  { start: 5731, end: 5731, zone: 1 },
  { start: 5732, end: 5732, zone: 2 },
  { start: 5733, end: 5799, zone: 1 },
  { start: 5800, end: 6043, zone: 3 },
  { start: 6044, end: 6044, zone: 2 },
  { start: 6045, end: 6256, zone: 3 },
  { start: 6257, end: 6270, zone: 4 },
  { start: 6271, end: 6316, zone: 3 },
  { start: 6317, end: 6349, zone: 4 },
  { start: 6350, end: 6353, zone: 3 },
  { start: 6354, end: 6356, zone: 4 },
  { start: 6357, end: 6394, zone: 3 },
  { start: 6395, end: 6400, zone: 4 },
  { start: 6401, end: 6430, zone: 3 },
  { start: 6431, end: 6431, zone: 2 },
  { start: 6432, end: 6433, zone: 3 },
  { start: 6434, end: 6440, zone: 2 },
  { start: 6441, end: 6441, zone: 1 },
  { start: 6442, end: 6444, zone: 3 },
  { start: 6445, end: 6459, zone: 4 },
  { start: 6460, end: 6467, zone: 3 },
  { start: 6468, end: 6469, zone: 2 },
  { start: 6470, end: 6471, zone: 3 },
  { start: 6472, end: 6472, zone: 2 },
  { start: 6473, end: 6506, zone: 3 },
  { start: 6507, end: 6508, zone: 2 },
  { start: 6509, end: 6509, zone: 3 },
  { start: 6510, end: 6536, zone: 2 },
  { start: 6537, end: 6537, zone: 1 },
  { start: 6538, end: 6555, zone: 2 },
  { start: 6556, end: 6573, zone: 3 },
  { start: 6574, end: 6602, zone: 2 },
  { start: 6603, end: 6607, zone: 3 },
  { start: 6608, end: 6641, zone: 2 },
  { start: 6642, end: 6724, zone: 1 },
  { start: 6725, end: 6750, zone: 2 },
  { start: 6751, end: 6764, zone: 1 },
  { start: 6765, end: 6765, zone: 2 },
  { start: 6766, end: 6797, zone: 1 },
  { start: 6798, end: 6799, zone: 2 },
  { start: 6800, end: 6999, zone: 3 },
  { start: 7000, end: 8999, zone: 4 },
  { start: 9000, end: 9999, zone: 3 },

];

export function zoneForPostcode(pc: string | number): Zone | undefined {
  const n = typeof pc === "number" ? pc : parseInt(String(pc).replace(/\D/g, ""), 10);
  if (Number.isNaN(n) || n < 0 || n > 9999) return undefined;
  // Binary search over non-overlapping, sorted ranges
  let lo = 0, hi = POSTCODE_ZONE_RANGES.length - 1;
  while (lo <= hi) {
    const mid = (lo + hi) >> 1;
    const r = POSTCODE_ZONE_RANGES[mid];
    if (n < r.start) hi = mid - 1;
    else if (n > r.end) lo = mid + 1;
    else return r.zone;
  }
  return undefined;
}
